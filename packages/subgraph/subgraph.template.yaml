specVersion: 0.0.4
description: Liquid staking yield aggregator for web3 protocols
repository: https://github.com/Tenderize/tender-app/packages/subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Registry
    network: { { networkName } }
    source:
      startBlock: 0 # Define start block
      address: '0x296dB3C224c7f3104f22Be3D4c1FBfFdE4A4431B' # Define deterministic Registry address here
      abi: Registry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/registry.ts
      entities:
        - Asset
        - Tenderizer
      abis:
        - name: Registry
          file: ./abis/Registry.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: NewTenderizer(indexed address,indexed address,address)
          handler: handleNewTenderizer
templates:
  - name: Tenderizer
    kind: ethereum/contract
    network: { { networkName } }
    source:
      abi: Tenderizer
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/tenderizer.ts
      entities:
        - Asset
        - Tenderizer
        - Stake
      abis:
        - name: Tenderizer
          file: ./abis/Tenderizer.json
      eventHandlers:
        - event: Deposit(indexed address,indexed address,uint256,uint256)
          handler: handleDeposit
        - event: Unlock(indexed address,uint256,uint256)
          handler: handleUnlock
        - event: Withdraw(indexed address,uint256,uint256)
          handler: handleWithdraw
        - event: Rebase(uint256,uint256)
          handler: handleRebase
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
